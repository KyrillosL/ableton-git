#!/bin/bash

# -----------------------------------------------------------
# Ableton-Git
# A wrapper for git to version control Ableton Live projects.
#
# Written by Clint Burgos (clintburgos.github.io)
# -----------------------------------------------------------

#
# pass args to git first
#
git $@

#
# only need to add actions to init and clone
#
if [ $1 == "init" ] || [ $1 == "clone" ]
then

	#
	# get the git directory
	# for clone:
	# 	from the url if no dir passed in
	# for init:
	#	running from repo root, use .git directory
	#
	if [ $1 == "clone" ]
	then
		if [ -z $3 ]
		then
			# clone with no location specified
			proj_name_regex="\/\K.*(?=.git)"

			# macOS compatibility
			if [ -x "$(command -v ggrep)" ]
			then
				proj_name=$(echo $2 | ggrep -oP $proj_name_regex)
			else
				proj_name=$(echo $2 | grep -oP $proj_name_regex)
			fi

		else
			# clone with location specified
			proj_name=$3
		fi

		# set repo root to clone directory to append correct settings in a clone
		repo_dir=$proj_name
	else

		# set repo root to current directory to append correct settings in an init
		repo_dir=.
	fi

#
# append to config
# filters that keep .als files unzipped for version control
#
cat >> "$repo_dir/.git/config" << EOL
[filter "zcat"]
	clean = zcat -f
	smudge = zcat -f
[diff "zcat"]
	textconv = zcat
EOL


if [ $1 == "init" ]
then

#
# create attributes
#  - track samples with git lfs
#  - unzip project for commit
#  - ensure LF line endings on pesky windows machines
#
cat >> "$repo_dir/.gitattributes" << EOL
Samples/** filter=lfs diff=lfs merge=lfs -text
*.als filter=zcat
* text eol=lf
EOL

#
# create exclude
# no need to version control the Backup directory
#
cat >> "$repo_dir/.gitignore" << EOL
Backup/*
EOL

#
# create readme
# so people know to use the ableton-git wrapper for the repos it inits
#
cat >> "$repo_dir/README.md" << EOL
# Ableton Project

Created with \`ableton-git\`.

Please use \`ableton-git\` to clone and use this project :)
<https://github.com/clintburgos/ableton-git>
EOL

fi
fi
